{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"RandomForest.ipynb","provenance":[],"collapsed_sections":[],"authorship_tag":"ABX9TyM6LWJ7iyhx5UX2+tVTTfHZ"},"kernelspec":{"name":"python3","display_name":"Python 3"}},"cells":[{"cell_type":"code","metadata":{"id":"fY3uMec5MS-F","colab_type":"code","outputId":"82697582-f329-4744-e050-7d22d85d079e","executionInfo":{"status":"ok","timestamp":1589964922161,"user_tz":-330,"elapsed":1887,"user":{"displayName":"Ashray Sinha","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgGBds_CROXDfBG8GG1DbjxzAWMpm7WOmGZ3130sw=s64","userId":"13087668075099496213"}},"colab":{"base_uri":"https://localhost:8080/","height":34}},"source":["from google.colab import drive\n","drive.mount('/content/drive')"],"execution_count":0,"outputs":[{"output_type":"stream","text":["Drive already mounted at /content/drive; to attempt to forcibly remount, call drive.mount(\"/content/drive\", force_remount=True).\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"wlcXKoajMX48","colab_type":"code","colab":{}},"source":["import xgboost as xgb\n","import pickle as pkl\n","import pandas as pd\n","from pandas import Series,DataFrame\n","import numpy as np\n","import matplotlib.pyplot as plt\n","%matplotlib inline"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"dYD1pLbkMZYB","colab_type":"code","colab":{}},"source":["file = open(\"drive/My Drive/Prediction/train_df.pkl\",'rb')\n","train_df = pkl.load(file)\n","file = open(\"drive/My Drive/Prediction/test_df.pkl\",'rb')\n","test_df = pkl.load(file)\n","file = open(\"drive/My Drive/Prediction/closed_store_ids.pkl\",'rb')\n","closed_store_ids = pkl.load(file)\n"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"90Y8slqzMcPl","colab_type":"code","outputId":"7d6f78c2-a602-46ad-e09c-eb53bfc6a722","executionInfo":{"status":"ok","timestamp":1589964933469,"user_tz":-330,"elapsed":10798,"user":{"displayName":"Ashray Sinha","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgGBds_CROXDfBG8GG1DbjxzAWMpm7WOmGZ3130sw=s64","userId":"13087668075099496213"}},"colab":{"base_uri":"https://localhost:8080/","height":211}},"source":["submissionrf1 = Series()\n","submissionrf5 = Series()\n","submissionrf10 = Series()\n","submissionrf15 = Series()\n","submissionrf20 = Series()\n","\n","from sklearn.ensemble import RandomForestRegressor\n","X_train = train_df.drop([\"Sales\",\"Store\"],axis=1)\n","Y_train = train_df[\"Sales\"]\n","X_test  = test_df.copy()\n","store_ids = X_test[\"Id\"]\n","X_test.drop([\"Id\",\"Store\"], axis=1,inplace=True)\n","\n","rf1 = RandomForestRegressor(n_jobs = -1, n_estimators = 1)\n","rf1.fit(X_train, Y_train)\n","Y_pred1 = rf1.predict(X_test)\n","submissionrf1 = submissionrf1.append(Series(Y_pred1, index=store_ids))\n","\n","rf5 = RandomForestRegressor(n_jobs = -1, n_estimators = 5)\n","rf5.fit(X_train, Y_train)\n","Y_pred5 = rf5.predict(X_test)\n","submissionrf5 = submissionrf5.append(Series(Y_pred5, index=store_ids))\n","\n","rf10 = RandomForestRegressor(n_jobs = -1, n_estimators = 10)\n","rf10.fit(X_train, Y_train)\n","Y_pred10 = rf10.predict(X_test)\n","submissionrf10 = submissionrf10.append(Series(Y_pred10, index=store_ids))\n","\n","rf15 = RandomForestRegressor(n_jobs = -1, n_estimators = 15)\n","rf15.fit(X_train, Y_train)\n","Y_pred15 = rf15.predict(X_test)\n","submissionrf15 = submissionrf15.append(Series(Y_pred15, index=store_ids))\n","\n","rf20 = RandomForestRegressor(n_jobs = -1, n_estimators = 20)\n","rf20.fit(X_train, Y_train)\n","Y_pred20 = rf20.predict(X_test)\n","submissionrf20 = submissionrf20.append(Series(Y_pred20, index=store_ids))"],"execution_count":0,"outputs":[{"output_type":"stream","text":["/usr/local/lib/python3.6/dist-packages/ipykernel_launcher.py:1: DeprecationWarning: The default dtype for empty Series will be 'object' instead of 'float64' in a future version. Specify a dtype explicitly to silence this warning.\n","  \"\"\"Entry point for launching an IPython kernel.\n","/usr/local/lib/python3.6/dist-packages/ipykernel_launcher.py:2: DeprecationWarning: The default dtype for empty Series will be 'object' instead of 'float64' in a future version. Specify a dtype explicitly to silence this warning.\n","  \n","/usr/local/lib/python3.6/dist-packages/ipykernel_launcher.py:3: DeprecationWarning: The default dtype for empty Series will be 'object' instead of 'float64' in a future version. Specify a dtype explicitly to silence this warning.\n","  This is separate from the ipykernel package so we can avoid doing imports until\n","/usr/local/lib/python3.6/dist-packages/ipykernel_launcher.py:4: DeprecationWarning: The default dtype for empty Series will be 'object' instead of 'float64' in a future version. Specify a dtype explicitly to silence this warning.\n","  after removing the cwd from sys.path.\n","/usr/local/lib/python3.6/dist-packages/ipykernel_launcher.py:5: DeprecationWarning: The default dtype for empty Series will be 'object' instead of 'float64' in a future version. Specify a dtype explicitly to silence this warning.\n","  \"\"\"\n"],"name":"stderr"}]},{"cell_type":"code","metadata":{"id":"7Acl3sIjAVnX","colab_type":"code","colab":{}},"source":["submissionrf1 = submissionrf1.append(Series(0, index=closed_store_ids))\n","submissionrf5 = submissionrf5.append(Series(0, index=closed_store_ids))\n","submissionrf10 = submissionrf10.append(Series(0, index=closed_store_ids))\n","submissionrf15 = submissionrf15.append(Series(0, index=closed_store_ids))\n","submissionrf20 = submissionrf20.append(Series(0, index=closed_store_ids))"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"LZomYHuXMySm","colab_type":"code","colab":{}},"source":["submissionrf1 = pd.DataFrame({ \"Id\": submissionrf1.index, \"Sales\": submissionrf1.values})\n","submissionrf5 = pd.DataFrame({ \"Id\": submissionrf5.index, \"Sales\": submissionrf5.values})\n","submissionrf10 = pd.DataFrame({ \"Id\": submissionrf10.index, \"Sales\": submissionrf10.values})\n","submissionrf15 = pd.DataFrame({ \"Id\": submissionrf15.index, \"Sales\": submissionrf15.values})\n","submissionrf20 = pd.DataFrame({ \"Id\": submissionrf20.index, \"Sales\": submissionrf20.values})"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"fz-uf2scM0cs","colab_type":"code","colab":{}},"source":["submissionrf1.to_csv('resultsrf1.csv', index=False)\n","submissionrf5.to_csv('resultsrf5.csv', index=False)\n","submissionrf10.to_csv('resultsrf10.csv', index=False)\n","submissionrf15.to_csv('resultsrf15.csv', index=False)\n","submissionrf20.to_csv('resultsrf20.csv', index=False)"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"kOOBBlQ_M642","colab_type":"code","colab":{}},"source":[""],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"e1gktXk97Ye-","colab_type":"code","outputId":"3af8e9c3-c163-4c50-a76d-3388cc0c2abf","executionInfo":{"status":"ok","timestamp":1589960478274,"user_tz":-330,"elapsed":1100,"user":{"displayName":"Ashray Sinha","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgGBds_CROXDfBG8GG1DbjxzAWMpm7WOmGZ3130sw=s64","userId":"13087668075099496213"}},"colab":{"base_uri":"https://localhost:8080/","height":34}},"source":["len(closed_store_ids)"],"execution_count":0,"outputs":[{"output_type":"execute_result","data":{"text/plain":["5984"]},"metadata":{"tags":[]},"execution_count":9}]},{"cell_type":"code","metadata":{"id":"zww8RpvbB4kD","colab_type":"code","colab":{}},"source":[""],"execution_count":0,"outputs":[]}]}